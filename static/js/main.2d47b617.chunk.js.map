{"version":3,"sources":["images/portrait.JPG","images/biobackground.jpeg","images/resume.svg","images/github.svg","images/linkedin.svg","images/expbackground.jpeg","images/hobbiesbackground.jpeg","images/projectbackground.jpeg","images/photobackground.jpeg","LinkItem.js","Bio.js","Experience.js","Skills.js","Projects.js","Photography.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LinkItem","react_default","a","createElement","className","title","this","props","itemName","href","externalUrl","src","imageUrl","alt","Component","tableContents","section","label","linkItems","GitHub","LinkedIn","Resume","backgroundStyle","backgroundImage","Background","backgroundSize","Bio","lib_default","id","style","Portrait","renderLinkItems","renderTableContents","map","item","LinkItem_LinkItem","Object","assign","key","Experience","Skills","Projects","Photography","App","Bio_Bio","Experience_Experience","Skills_Skills","Projects_Projects","Photography_Photography","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6XCInBC,0LAEjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAOC,KAAKC,MAAMC,UAC3CP,EAAAC,EAAAC,cAAA,KACEC,UAAU,kBACVK,KAAMH,KAAKC,MAAMG,aACjBT,EAAAC,EAAAC,cAAA,OAAKQ,IAAKL,KAAKC,MAAMK,SAAUC,IAAKP,KAAKC,MAAMC,oBAPnBM,2GCOhCC,EAAgB,CACpB,CACEC,QAAS,cACTC,MAAO,8BAET,CACED,QAAS,iBACTC,MAAO,0BAET,CACED,QAAS,mBACTC,MAAO,kBAET,CACED,QAAS,gBACTC,MAAO,sBAILC,EAAY,CAChB,CACEV,SAAU,SACVE,YAAa,+BACbE,SAAUO,KAEZ,CACEX,SAAU,WACVE,YAAa,0CACbE,SAAUQ,KAEZ,CACEZ,SAAU,SACVE,YAAa,uEACbE,SAAUS,MAIRC,EAAkB,CACtBC,gBAAiB,OAASC,IAAa,IACvCC,eAAgB,SAGGC,mLAEjB,OACEzB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAkB0B,GAAI,cACpB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMyB,MAAOP,GAC1BrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWO,IAAKmB,IAAUjB,IAAI,cAE/CZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,kCAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZE,KAAKyB,mBAER9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACZE,KAAK0B,mEAQd,OAAOd,EAAUe,IAAI,SAACC,GACpB,OACEjC,EAAAC,EAAAC,cAACgC,EAADC,OAAAC,OAAA,CAAUC,IAAKJ,EAAK1B,UAAc0B,oDAMtC,OAAOnB,EAAckB,IAAI,SAACC,GACxB,OACEjC,EAAAC,EAAAC,cAAA,KAAGM,KAAMyB,EAAKlB,QAASZ,UAAU,eAAe8B,EAAKjB,gBAjC5BH,6BC/C3BQ,EAAkB,CACtBC,gBAAiB,cAASC,EAAa,IACvCC,eAAgB,SAGGc,mLAEjB,OACEtC,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAkB0B,GAAI,cACpB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAayB,MAAOP,YAJHR,6BCLlCQ,EAAkB,CACtBC,gBAAiB,cAASC,EAAa,IACvCC,eAAgB,SAGGe,mLAEjB,OACEvC,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAkB0B,GAAI,iBACrB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASyB,MAAOP,YAJFR,6BCL9BQ,EAAkB,CACtBC,gBAAiB,cAASC,EAAa,IACvCC,eAAgB,SAGGgB,mLAEjB,OACCxC,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAkB0B,GAAI,mBACpB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWyB,MAAOP,YAJFR,6BCLhCQ,EAAkB,CACtBC,gBAAiB,cAASC,EAAa,IACvCC,eAAgB,SAGGiB,mLAEjB,OACEzC,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAkB0B,GAAI,gBACrB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcyB,MAAOP,YAJFR,aCY1B6B,mLAZX,OACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyC,EAAD,MACA3C,EAAAC,EAAAC,cAAC0C,EAAD,MACA5C,EAAAC,EAAAC,cAAC2C,EAAD,MACA7C,EAAAC,EAAAC,cAAC4C,EAAD,MACA9C,EAAAC,EAAAC,cAAC6C,EAAD,cARUlC,aCCEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2d47b617.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portrait.aa6497d0.JPG\";","module.exports = __webpack_public_path__ + \"static/media/biobackground.e55b4c19.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/resume.766248a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.dec21930.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.abf6bce6.svg\";","module.exports = __webpack_public_path__ + \"static/media/expbackground.35ef97cb.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hobbiesbackground.0d2e4eef.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/projectbackground.40a954c8.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/photobackground.9ee8b4c7.jpeg\";","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './LinkItem.css';\r\n\r\nexport default class LinkItem extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"link-item\" title={this.props.itemName}>\r\n        <a\r\n          className=\"link-item-title\"\r\n          href={this.props.externalUrl}>\r\n          <img src={this.props.imageUrl} alt={this.props.itemName}/>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLinkItem.propTypes = {\r\n  itemName: PropTypes.string,\r\n  externalUrl: PropTypes.string,\r\n  imageUrl: PropTypes.string\r\n};","import React, { Component } from 'react';\r\nimport ScrollableAnchor from 'react-scrollable-anchor';\r\nimport LinkItem from './LinkItem';\r\nimport './Bio.css';\r\n\r\nimport Portrait from './images/portrait.JPG';\r\nimport Background from './images/biobackground.jpeg';\r\nimport Resume from './images/resume.svg';\r\nimport GitHub from './images/github.svg';\r\nimport LinkedIn from './images/linkedin.svg';\r\n\r\nconst tableContents = [\r\n  {\r\n    section: \"#exp-anchor\",\r\n    label: \"Go to Technical Experience\",\r\n  },\r\n  {\r\n    section: \"#skills-anchor\",\r\n    label: \"Go to Technical Skills\",\r\n  },\r\n  {\r\n    section: \"#projects-anchor\",\r\n    label: \"Go to Projects\",\r\n  },\r\n  {\r\n    section: \"#photo-anchor\",\r\n    label: \"Go to Photography\",\r\n  }\r\n]\r\n\r\nconst linkItems = [\r\n  {\r\n    itemName: \"GitHub\",\r\n    externalUrl: \"https://github.com/Kevin0115\",\r\n    imageUrl: GitHub,\r\n  },\r\n  {\r\n    itemName: \"LinkedIn\",\r\n    externalUrl: \"https://www.linkedin.com/in/kevinychoi/\",\r\n    imageUrl: LinkedIn,\r\n  },\r\n  {\r\n    itemName: \"Resume\",\r\n    externalUrl: \"https://github.com/Kevin0115/resume/raw/master/Kevin-Choi-Resume.pdf\",\r\n    imageUrl: Resume,\r\n  },\r\n]\r\n\r\nconst backgroundStyle = {\r\n  backgroundImage: \"url(\" + Background + \")\",\r\n  backgroundSize: \"cover\",\r\n};\r\n\r\nexport default class Bio extends Component {\r\n  render() {\r\n    return (\r\n      <ScrollableAnchor id={'bio-anchor'}>\r\n        <div className=\"bio\" style={backgroundStyle}>\r\n          <div className=\"bio-portrait\">\r\n            <img className=\"portrait\" src={Portrait} alt=\"portrait\" />\r\n          </div>\r\n          <div className=\"bio-name\">\r\n            Kevin Choi | Software Engineer\r\n          </div>\r\n          <div className=\"bio-links\">\r\n            {this.renderLinkItems()}\r\n          </div>\r\n          <div className=\"bio-table-contents\">\r\n            {this.renderTableContents()}\r\n          </div>\r\n        </div>\r\n      </ScrollableAnchor>\r\n    );\r\n  }\r\n\r\n  renderLinkItems() {\r\n    return linkItems.map((item) => {\r\n      return (\r\n        <LinkItem key={item.itemName} {...item} />\r\n      )\r\n    });\r\n  }\r\n\r\n  renderTableContents() {\r\n    return tableContents.map((item) => {\r\n      return (\r\n        <a href={item.section} className=\"contentLink\">{item.label}</a>\r\n      )\r\n    });\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport ScrollableAnchor from 'react-scrollable-anchor'\r\nimport './Experience.css';\r\n\r\nimport Background from './images/expbackground.jpeg'\r\n\r\nconst backgroundStyle = {\r\n  backgroundImage: \"url(\" + Background + \")\",\r\n  backgroundSize: \"cover\",\r\n};\r\n\r\nexport default class Experience extends Component {\r\n  render() {\r\n    return (\r\n      <ScrollableAnchor id={'exp-anchor'}>\r\n        <div className=\"experience\" style={backgroundStyle} />\r\n      </ScrollableAnchor>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport ScrollableAnchor from 'react-scrollable-anchor';\r\nimport './Skills.css';\r\n\r\nimport Background from './images/hobbiesbackground.jpeg'\r\n\r\nconst backgroundStyle = {\r\n  backgroundImage: \"url(\" + Background + \")\",\r\n  backgroundSize: \"cover\",\r\n};\r\n\r\nexport default class Skills extends Component {\r\n  render() {\r\n    return (\r\n      <ScrollableAnchor id={'skills-anchor'}>\r\n      \t<div className=\"skills\" style={backgroundStyle} />\r\n   \t  </ScrollableAnchor>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport ScrollableAnchor from 'react-scrollable-anchor';\r\nimport './Projects.css';\r\n\r\nimport Background from './images/projectbackground.jpeg'\r\n\r\nconst backgroundStyle = {\r\n  backgroundImage: \"url(\" + Background + \")\",\r\n  backgroundSize: \"cover\",\r\n};\r\n\r\nexport default class Projects extends Component {\r\n  render() {\r\n    return (\r\n    \t<ScrollableAnchor id={'projects-anchor'}>\r\n      \t<div className=\"projects\" style={backgroundStyle} />\r\n    \t</ScrollableAnchor>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport ScrollableAnchor from 'react-scrollable-anchor';\r\nimport './Photography.css';\r\n\r\nimport Background from './images/photobackground.jpeg'\r\n\r\nconst backgroundStyle = {\r\n  backgroundImage: \"url(\" + Background + \")\",\r\n  backgroundSize: \"cover\",\r\n};\r\n\r\nexport default class Photography extends Component {\r\n  render() {\r\n    return (\r\n      <ScrollableAnchor id={'photo-anchor'}>\r\n      \t<div className=\"photography\" style={backgroundStyle} />\r\n      </ScrollableAnchor>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Bio from './Bio';\r\nimport Experience from './Experience';\r\nimport Skills from './Skills';\r\nimport Projects from './Projects';\r\nimport Photography from './Photography';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Bio />\r\n        <Experience />\r\n        <Skills />\r\n        <Projects />\r\n        <Photography />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}